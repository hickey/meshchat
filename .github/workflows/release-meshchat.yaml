name: Release MeshChat Package
on: workflow_dispatch

jobs:
  create-release:
    runs-on: ubuntu-latest
    # container:
    #   image: registry.gitlab.com/wt0f/gitlab-runner-images/node:latest
    outputs:
      build_version: ${{ steps.detect_version.outputs.build_version }}
    env:
      GITHUB_TOKEN: ${{ secrets.RELEASE_IT_TOKEN }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: release
      - name: git config
        run: |
          git config user.name "${GITHUB_ACTOR}"
          git config user.email "${GITHUB_ACTOR}@users.noreply.github.com"
      - run: npm install -g release-it @release-it/conventional-changelog @commitlint/config-conventional @commitlint/cli auto-changelog
      - id: detect_version
        run: echo "build_version=$(npx release-it --release-version)" >> $GITHUB_OUTPUT
      - run: npx release-it -VV --ci
      - run: git checkout master
      - run: git rebase release
      - run: git push

  build-meshchat-package:
    needs: create-release
    uses:
      ./.github/workflows/workflow-meshchat-package.yaml
    with:
      ref: release
      build_version: ${{ needs.create-release.outputs.build_version }}
      build_dir: package/meshchat-ipkg

  build-meshchat-api-package:
    needs: create-release
    uses:
      ./.github/workflows/workflow-meshchat-api-package.yaml
    with:
      build_version: ${{ needs.create-release.outputs.build_version }}
      build_dir: package/meshchat-ipkg

  add-meshchat-package-to-release:
    needs:
      - build-meshchat-package
      - build-meshchat-api-package
    # container:
    #   image: registry.gitlab.com/wt0f/gitlab-runner-images/node:latest
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true
      - run: git pull
      - run: npm install -g release-it @release-it/conventional-changelog @commitlint/config-conventional @commitlint/cli auto-changelog
      - uses: actions/download-artifact@v4
        with:
          name: ${{ needs.release_meshchat_package.outputs.package_file }}
          path: ${{ needs.release_meshchat_package.outputs.package_file }}
      - run: |
          for file in *.ipk; do
            echo "uploading $file"
            npx release-it --ci --no-increment --no-git --no-npm --github.update=true --github.assets=$file
          done
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_IT_TOKEN }}

  update-documentation:
    runs-on: ubuntu-latest
    needs: create-release
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true
      - uses: ./.github/workflows/publish-docs.yaml
        with:
          build_version: ${{ needs.create-release.outputs.build_version }}
