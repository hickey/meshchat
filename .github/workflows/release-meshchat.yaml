name: Release MeshChat Package
on:
    pull_request:
        types: [closed]
        branches: [release]
    push:

jobs:
  calculate-version-number:
    runs-on: ubuntu-latest
    # container:
    #   image: registry.gitlab.com/wt0f/gitlab-runner-images/node:latest
    outputs:
      build_version: ${{ steps.detect_version.outputs.build_version }}
    env:
      GITHUB_TOKEN: ${{ secrets.RELEASE_IT_TOKEN }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: git config
        run: |
          git config user.name "${GITHUB_ACTOR}"
          git config user.email "${GITHUB_ACTOR}@users.noreply.github.com"
      - run: npm install -g release-it @release-it/conventional-changelog @commitlint/config-conventional @commitlint/cli auto-changelog
      - id: detect_version
        run: echo "build_version=$(npx release-it --release-version)" >> $GITHUB_OUTPUT
      - run: npx release-it --ci

      # - run: git checkout master
      # - run: git rebase release
      # - run: git push
      # - uses: actions/upload-artifact@v4
      #   with:
      #     name: meshchat
      #     path: VERSION

  release-meshchat-package:
    needs: calculate-version-number
    uses:
      ./.github/workflows/build-meshchat-package.yaml
    with:
      build_version: ${{ needs.calculate-version-number.outputs.build_version }}
      build_dir: package/meshchat-ipkg

  add-meshchat-package-to-release:
    needs: release-meshchat-package
    # container:
    #   image: registry.gitlab.com/wt0f/gitlab-runner-images/node:latest
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - run: npm install -g release-it @release-it/conventional-changelog @commitlint/config-conventional @commitlint/cli auto-changelog
      - uses: actions/download-artifact@v4
        with:
          name: ${{ needs.release_meshchat_package.outputs.package_file }}
          path: ${{ needs.release_meshchat_package.outputs.package_file }}
      - run: npx release-it --ci --no-git --github.release=false --github.assets=*.dep --github.assets=*.ipk
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_IT_TOKEN }}